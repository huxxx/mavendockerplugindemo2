<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.bolingcavalry</groupId>
	<artifactId>mavendockerplugindemo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>mavendockerplugindemo</name>
	<description>maven docker plugin demo</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.finalName>mavendockerplugindemo</project.build.finalName>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.image.prefix>47.100.49.91:5000</docker.image.prefix>
		<docker.username>admin</docker.username>
		<docker.password>admin123</docker.password>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--spring boot maven插件-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.4</version>
                <executions>
			        <execution>
			            <id>default</id><!-- 要绑定到的生命周期的阶段 -->
			            <phase>install</phase><!-- 要绑定到的生命周期的阶段 -->
			            <goals> <!-- 要绑定的插件的目标 -->
			                <goal>build</goal>
			                <goal>push</goal>
			            </goals>
			        </execution>
			    </executions>
                <configuration>
                 	<!-- 私有镜像中心的用户名 -->
        			<!-- <username>registry</username> -->
			        <!-- 私有镜像中心的密码 -->
			        <!-- <password>xxxx</password> -->
			        <repository>${docker.image.prefix}/${project.artifactId}</repository>
			        <!-- 镜像版本号 -->
			        <tag>${project.version}</tag>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
		</plugins>
	</build>
</project>
